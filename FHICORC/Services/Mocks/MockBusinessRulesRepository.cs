using FHICORC.Core.Services.Model.BusinessRules;
using FHICORC.Core.WebServices;
using FHICORC.Services.Interfaces;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace FHICORC.Services.Mocks
{
    public class MockBusinessRulesRepository : IBusinessRulesRepository
    {
        public async Task<ApiResponse<ICollection<BusinessRule>>> GetBusinessRules()
        {
            string jsonResponse = @"[ { ""id"": ""GR-NO-0001"", ""description"": ""The \""disease or agent targeted\"" must be COVID-19 of the value set list."", ""inputParameter"": ""Entire HCert JSON (\""v\"",\""t\"",\""r\"",\""..\"") + Valuesets + \""tg\"""", ""logic"": { ""and"": [ { ""if"": [ { ""var"": ""payload.r.0"" }, { ""in"": [ { ""var"": ""payload.r.0.tg"" }, { ""var"": ""external.valueSets.disease-agent-targeted"" } ] }, true ] }, { ""if"": [ { ""var"": ""payload.t.0"" }, { ""in"": [ { ""var"": ""payload.t.0.tg"" }, { ""var"": ""external.valueSets.disease-agent-targeted"" } ] }, true ] }, { ""if"": [ { ""var"": ""payload.v.0"" }, { ""in"": [ { ""var"": ""payload.v.0.tg"" }, { ""var"": ""external.valueSets.disease-agent-targeted"" } ] }, true ] } ] }
        }, { ""id"": ""GR-NO-0000"", ""description"": ""Exactly one type of event."", ""inputParameter"": ""Entire HCert JSON (\""r\"", \""t\"", \""v\"")"", ""logic"": { ""==="": [ { ""reduce"": [ [ { ""var"": ""payload.r"" }, { ""var"": ""payload.t"" }, { ""var"": ""payload.v"" } ], { ""+"": [ { ""var"": ""accumulator"" }, { ""if"": [ { ""var"": ""current.0"" }, 1, 0 ] } ] }, 0 ] }, 1 ] } }, { ""id"": ""VR-NO-0000"", ""description"": ""At most one v-event."", ""inputParameter"": ""Entire HCert JSON (\""v\"")"", ""logic"": { ""!"": [ { ""var"": ""payload.v.1"" } ] } }, { ""id"": ""VR-NO-0001"", ""businessDescription"": ""EMA must approve allowed vaccines."", ""description"": ""Only vaccines in the allowed valueset that have been approved by the EMA are allowed."", ""inputParameter"": ""Vaccination Part of the HCert (\""v\"")+ Valuesets + (\""v\"")+\""mp\"""", ""logic"": { ""if"": [ { ""var"": ""payload.v.0"" }, { ""in"": [ { ""var"": ""payload.v.0.mp"" }, [ ""EU/1/20/1528"", ""EU/1/20/1507"", ""EU/1/21/1529"", ""EU/1/20/1525"" ] ] }, true ] } }, { ""id"": ""VR-NO-0002"", ""businessDescription"": ""The vaccination course must be completed to provide enough protection."", ""description"": ""Vaccination doses must be equal or greater than expected doses."", ""inputParameter"": ""Vaccination Part of the HCert (\""v\"")+ Valuesets + \""dn\""+\""sd\"""", ""logic"": { ""if"": [ { ""var"": ""payload.v.0"" }, { "">="": [ { ""var"": ""payload.v.0.dn"" }, { ""var"": ""payload.v.0.sd"" } ] }, true ] } }, { ""id"": ""VR-NO-0003"", ""businessDescription"": ""The full vaccination protection starts up 14 days after vaccination and is valid for 365 days."", ""description"": ""Verification Datetime must be more than 14 days and less than 365 days after the last date of vaccination."", ""inputParameter"": ""Vaccination Part of the HCert (\""v\"") + Valuesets + +\""dt\"""", ""logic"": { ""if"": [ { ""var"": ""payload.v.0"" }, { ""not-after"": [ { ""plusTime"": [ { ""var"": ""payload.v.0.dt"" }, 14, ""day"" ] }, { ""plusTime"": [ { ""var"": ""external.validationClock"" }, 0, ""day"" ] }, { ""plusTime"": [ { ""var"": ""payload.v.0.dt"" }, 365, ""day"" ] } ] }, true ] } }, { ""id"": ""TR-NO-0000"", ""description"": ""At most one t-event."", ""inputParameter"": ""Entire HCert JSON (\""t\"")"", ""logic"": { ""!"": [ { ""var"": ""payload.t.1"" } ] } }, { ""id"": ""TR-NO-0001"", ""businessDescription"": ""The test type (tt) can be RAT or NAA."", ""description"": ""The test type must be one of the value set list (RAT OR NAA)."", ""inputParameter"": ""Test Part of the HCert (\""t\"")+ Valuesets + \""tt\"""", ""logic"": { ""if"": [ { ""var"": ""payload.t.0"" }, { ""in"": [ { ""var"": ""payload.t.0.tt"" }, [ ""LP217198-3"", ""LP6464-4"" ] ] }, true ] } }, { ""id"": ""TR-NO-0002"", ""businessDescription"": ""If the test type is \""RAT\"" then the test must be in the list of accepted RAT tests."", ""description"": ""If the test type is \""RAT\"" then the \""test product and manufacturer\"" MUST be in the valueset list, if it's NAA return true."", ""inputParameter"": ""Test Part of the HCert (\""t\"")+ Valuesets +\""tt\"" + \""ma\"""", ""logic"": { ""if"": [ { ""==="": [ { ""var"": ""payload.t.0.tt"" }, ""LP217198-3"" ] }, { ""in"": [ { ""var"": ""payload.t.0.ma"" }, { ""var"": ""external.valueSets.covid-19-lab-test-manufacturer-and-name"" } ] }, true ] } }, { ""id"": ""TR-NO-0005"", ""businessDescription"": ""The test must be performed "", ""description"": ""DateTime of Sample Collection must be less than 48 hours before the Verification Datetime for a test of type RAT (rapid antigen test)."", ""inputParameter"": ""Test Part of the HCert (\""t\"")+ validation date (timestamp)+ Valuesets +\""sc\"""", ""logic"": { ""if"": [ { ""==="": [ { ""var"": ""payload.t.0.tt"" }, ""LP217198-3"" ] }, { ""before"": [ { ""plusTime"": [ { ""var"": ""external.validationClock"" }, 0, ""day"" ] }, { ""plusTime"": [ { ""var"": ""payload.t.0.sc"" }, 48, ""hour"" ] } ] }, true ] } }, { ""id"": ""TR-NO-0006"", ""businessDescription"": ""The test must be performed "", ""description"": ""DateTime of Sample Collection must be less than 72 hours before the Verification Datetime for a test of type NAA (PCR test)."", ""inputParameter"": ""Test Part of the HCert (\""t\"")+ validation date (timestamp)+ Valuesets +\""sc\"""", ""logic"": { ""if"": [ { ""==="": [ { ""var"": ""payload.t.0.tt"" }, ""LP6464-4"" ] }, { ""before"": [ { ""plusTime"": [ { ""var"": ""external.validationClock"" }, 0, ""day"" ] }, { ""plusTime"": [ { ""var"": ""payload.t.0.sc"" }, 72, ""hour"" ] } ] }, true ] } }, { ""id"": ""TR-NO-0004"", ""description"": ""Test result must be negative (\""not detected\"")."", ""inputParameter"": ""Test Part of the HCert (\""t\"")+ Valuesets +\""tr\"""", ""logic"": { ""if"": [ { ""var"": ""payload.t.0"" }, { ""==="": [ { ""var"": ""payload.t.0.tr"" }, ""260415000"" ] }, true ] } }, { ""id"": ""RR-NO-0000"", ""description"": ""At most one r-event."", ""inputParameter"": ""Entire HCert JSON (\""r\"")"", ""logic"": { ""!"": [ { ""var"": ""payload.r.1"" } ] } }, { ""id"": ""RR-NO-0001"", ""businessDescription"": ""The certificate must be valid."", ""description"": ""The Verification Datetime must be between \""Certificate Valid From\"" and \""Certificate Valid Until\""."", ""inputParameter"": ""Recovery Part of the HCert (\""r\"")+ validation date (timestamp) +\""df\"" +\""du\"""", ""logic"": { ""if"": [ { ""var"": ""payload.r.0"" }, { ""not-after"": [ { ""plusTime"": [ { ""var"": ""payload.r.0.df"" }, 0, ""day"" ] }, { ""plusTime"": [ { ""var"": ""external.validationClock"" }, 0, ""day"" ] }, { ""plusTime"": [ { ""var"": ""payload.r.0.du"" }, 0, ""day"" ] } ] }, true ] } }, { ""id"": ""RR-NO-0002"", ""businessDescription"": ""The validity period of the certificate must be checked."", ""description"": ""The validity start date must be greater than or equal to the first positive test date +11 days and validity end date must be less than or equal to the first postive test date +180."", ""inputParameter"": ""Recovery Part of the HCert (\""r\"")+ (\""fr\"" + 11 days) + (\""fr\"" + 180 days)"", ""logic"": { ""if"": [ { ""var"": ""payload.r.0"" }, { ""and"": [ { ""not-before"": [ { ""plusTime"": [ { ""var"": ""payload.r.0.df"" }, 0, ""day"" ] }, { ""plusTime"": [ { ""var"": ""payload.r.0.fr"" }, 11, ""day"" ] } ] }, { ""not-after"": [ { ""plusTime"": [ { ""var"": ""payload.r.0.du"" }, 0, ""day"" ] }, { ""plusTime"": [ { ""var"": ""payload.r.0.fr"" }, 180, ""day"" ] } ] } ] }, true ] } } ]";


            var response = new ApiResponse<ICollection<BusinessRule>>(JsonConvert.DeserializeObject<ICollection<BusinessRule>>(jsonResponse), 200);
           
            return response;
        }
    }
}
